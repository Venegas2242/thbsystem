{
  "catalogos": {
    "cod-entidades.php": "<?php\r\n\r\nerror_reporting(E_ALL & ~E_DEPRECATED);\r\nini_set(\"display_errors\", \"1\");\r\ndate_default_timezone_set(\"America/Mexico_City\");\r\n\r\nspl_autoload_register(function ($NombreClase) {\r\n    require_once '../' . $NombreClase . '.php';\r\n});\r\n\r\nclass Entidades\r\n{\r\n    public $identidad = 0;\r\n    public $nombrecomercial = \"\";\r\n    public $nombrecomun = \"\";\r\n    public $direccion = \"\";\r\n    public $idciudad = 0;\r\n    public $idestado = 0;\r\n    public $idpais = 0;\r\n    public $nombreciudad = \"\";\r\n    public $nombreestado = \"\";\r\n    public $nombrepais = \"\";\r\n    public $rfc = \"\";\r\n    public $telefono = \"\";\r\n    public $correo = \"\";\r\n    public $web = \"\";\r\n    public $credito = 0.0;\r\n    public $saldo = 0.0;\r\n    public $diascredito = 0;\r\n    public $idbanco = \"\";  // Asegúrate de que esté definido como string\r\n    public $cuenta = \"\";\r\n    public $clabe = \"\";\r\n    public $tipo = \"\";\r\n\r\n    function Grabar()\r\n    {\r\n        $mysql = new Connection();\r\n        $cnn = $mysql->getConnection();\r\n        $retorno = $this->ArrayMessage(\"0\", \"No se ha realizado ninguna acción.\");\r\n\r\n        $query = $cnn->prepare(\"call proc_EntidadGrabar(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\");\r\n        $query->bind_param(\r\n            \"isssiiissssddissss\",\r\n            $this->identidad,\r\n            $this->nombrecomercial,\r\n            $this->nombrecomun,\r\n            $this->direccion,\r\n            $this->idciudad,\r\n            $this->idestado,\r\n            $this->idpais,\r\n            $this->rfc,\r\n            $this->telefono,\r\n            $this->correo,\r\n            $this->web,\r\n            $this->credito,\r\n            $this->saldo,\r\n            $this->diascredito,\r\n            $this->idbanco,\r\n            $this->cuenta,\r\n            $this->clabe,\r\n            $this->tipo\r\n        );\r\n        $query->execute();\r\n        $query->store_result();\r\n        if (mysqli_stmt_error($query) != \"\") {\r\n            $retorno = $this->ArrayMessage(\"0\", mysqli_stmt_error($query));\r\n        }\r\n        if ($query->num_rows != 0) {\r\n            $query->bind_result($this->identidad);\r\n            if ($query->fetch()) {\r\n                if (is_null($this->identidad)) {\r\n                    $retorno = $this->ArrayMessage(\"0\", \"No se ha realizado ninguna acción. El error se desconoce.\");\r\n                } else {\r\n                    $retorno = $this->ArrayMessage(\"1\", \"El proveedor/cliente ha sido grabado correctamente.\");\r\n                }\r\n            }\r\n        }\r\n        $query->close();\r\n        $cnn->close();\r\n        return $retorno;\r\n    }\r\n\r\n    // Método para generar mensajes de respuesta\r\n    private function ArrayMessage($status, $message)\r\n    {\r\n        return array('status' => $status, 'message' => $message);\r\n    }\r\n\r\n    function Buscar($textoBuscar)\r\n    {\r\n        $mysql = new Connection();\r\n        $cnn = $mysql->getConnection();\r\n        $retorno = array();\r\n        $query = $cnn->prepare(\"call proc_EntidadBuscar(?)\");\r\n        $query->bind_param(\"s\", $textoBuscar);\r\n        $query->execute();\r\n        $query->bind_result($identidad, $nombrecomercial, $rfc, $telefono, $correo, $tipo);\r\n        while ($query->fetch()) {\r\n            $entidad = new Entidades();\r\n            $entidad->identidad = $identidad;\r\n            $entidad->nombrecomercial = $nombrecomercial;\r\n            $entidad->rfc = $rfc;\r\n            $entidad->telefono = $telefono;\r\n            $entidad->correo = $correo;\r\n            $entidad->tipo = $tipo;\r\n            array_push($retorno, $entidad);\r\n        }\r\n        $query->close();\r\n        $cnn->close();\r\n        return $retorno;\r\n    }\r\n\r\n    function BuscarInfo($id_entidad)\r\n    {\r\n        $mysql = new Connection();\r\n        $cnn = $mysql->getConnection();\r\n        $retorno = array();\r\n        $query = $cnn->prepare(\"call proc_EntidadInfo(?)\");\r\n        $query->bind_param(\"i\", $id_entidad);\r\n        $query->execute();\r\n        $query->bind_result(\r\n            $nombrefiscal,\r\n            $nombrecomercial,\r\n            $direccion,\r\n            $idciudad,\r\n            $nombreciudad,\r\n            $idestado,\r\n            $nombreestado,\r\n            $idpais,\r\n            $nombrepais,\r\n            $rfc,\r\n            $telefono,\r\n            $correo,\r\n            $web,\r\n            $credito,\r\n            $saldo,\r\n            $diascredito,\r\n            $idbanco,\r\n            $nombrebanco,\r\n            $cuenta,\r\n            $clabe,\r\n            $tipo\r\n        );\r\n\r\n        while ($query->fetch()) {\r\n            $entidad = array(\r\n                \"identidad\" => $id_entidad,\r\n                \"nombrecomercial\" => $nombrefiscal,\r\n                \"nombrecomun\" => $nombrecomercial,\r\n                \"direccion\" => $direccion,\r\n                \"idpais\" => $idpais,\r\n                \"idestado\" => 4, // Asegúrate de que esto es un entero\r\n                \"idciudad\" => $idciudad,\r\n                \"nombrepais\" => $nombrepais,\r\n                \"nombreestado\" => $nombreestado,\r\n                \"nombreciudad\" => $nombreciudad,\r\n                \"rfc\" => $rfc,\r\n                \"telefono\" => $telefono,\r\n                \"correo\" => $correo,\r\n                \"web\" => $web,\r\n                \"credito\" => $credito,\r\n                \"saldo\" => $saldo,\r\n                \"diascredito\" => $diascredito,\r\n                \"idbanco\" => $idbanco,\r\n                \"nombrebanco\" => $nombrebanco,\r\n                \"cuenta\" => $cuenta,\r\n                \"clabe\" => $clabe,\r\n                \"tipo\" => $tipo\r\n            );\r\n            array_push($retorno, $entidad);\r\n        }\r\n\r\n        $query->close();\r\n        $cnn->close();\r\n        return $entidad;\r\n    }\r\n\r\n\r\n\r\n    function Eliminar($idEntidad)\r\n    {\r\n        $mysql = new Connection();\r\n        $cnn = $mysql->getConnection();\r\n        $retorno = $this->ArrayMessage(\"0\", \"No se ha realizado ninguna acción.\");\r\n        $query = $cnn->prepare(\"call proc_EntidadEliminar(?)\");\r\n        $query->bind_param(\"i\", $idEntidad);\r\n        $query->execute();\r\n        $query->store_result();\r\n        if (mysqli_stmt_error($query) != \"\") {\r\n            $retorno = $this->ArrayMessage(\"0\", mysqli_stmt_error($query));\r\n        }\r\n        if ($query->num_rows != 0) {\r\n            $query->bind_result($this->identidad);\r\n            if ($query->fetch()) {\r\n                if (is_null($this->identidad)) {\r\n                    $retorno = $this->ArrayMessage(\"0\", \"No se ha realizado ninguna acción. El error se desconoce.\");\r\n                } else {\r\n                    $retorno = $this->ArrayMessage(\"1\", \"El proveedor/cliente ha sido eliminado.\");\r\n                }\r\n            }\r\n        }\r\n        $query->close();\r\n        $cnn->close();\r\n        return $retorno;\r\n    }\r\n\r\n    function ObtenerPaises()\r\n    {\r\n        $mysql = new Connection();\r\n        $cnn = $mysql->getConnection();\r\n        $retorno = array();\r\n        $query = $cnn->prepare(\"CALL get_Paises()\");\r\n        $query->execute();\r\n        $query->bind_result($idpais, $nombre);\r\n        while ($query->fetch()) {\r\n            $pais = array(\"idpais\" => $idpais, \"nombre\" => $nombre);\r\n            array_push($retorno, $pais);\r\n        }\r\n        $query->close();\r\n        $cnn->close();\r\n        return $retorno;\r\n    }\r\n\r\n    function ObtenerEstados($idpais)\r\n    {\r\n        $mysql = new Connection();\r\n        $cnn = $mysql->getConnection();\r\n        $retorno = array();\r\n        $query = $cnn->prepare(\"CALL get_Estados(?)\");\r\n        $query->bind_param(\"i\", $idpais);\r\n        $query->execute();\r\n        $query->bind_result($idestado, $nombre);\r\n        while ($query->fetch()) {\r\n            $estado = array(\"idestado\" => $idestado, \"nombre\" => $nombre);\r\n            array_push($retorno, $estado);\r\n        }\r\n        $query->close();\r\n        $cnn->close();\r\n        return $retorno;\r\n    }\r\n\r\n    function ObtenerCiudades($idestado)\r\n    {\r\n        $mysql = new Connection();\r\n        $cnn = $mysql->getConnection();\r\n        $retorno = array();\r\n        $query = $cnn->prepare(\"CALL get_Ciudades(?)\");\r\n        $query->bind_param(\"i\", $idestado);\r\n        $query->execute();\r\n        $query->bind_result($idciudad, $nombre);\r\n        while ($query->fetch()) {\r\n            $ciudad = array(\"idciudad\" => $idciudad, \"nombre\" => $nombre);\r\n            array_push($retorno, $ciudad);\r\n        }\r\n        $query->close();\r\n        $cnn->close();\r\n        return $retorno;\r\n    }\r\n\r\n    function ObtenerBancos()\r\n    {\r\n        $mysql = new Connection();\r\n        $cnn = $mysql->getConnection();\r\n        $retorno = array();\r\n        $query = $cnn->prepare(\"CALL get_Bancos()\");\r\n        $query->execute();\r\n        $query->bind_result($idbanco, $nombre);\r\n        while ($query->fetch()) {\r\n            $bancos = new Entidades();\r\n            $bancos = array(\"idbanco\" => $idbanco, \"banco\" => $nombre);\r\n            array_push($retorno, $bancos);\r\n        }\r\n        $query->close();\r\n        $cnn->close();\r\n        return $retorno;\r\n    }\r\n}\r\n\r\nclass Contactos\r\n{\r\n    public $idcontacto = 0;\r\n    public $contacto = \"\";\r\n    public $telefono = \"\";\r\n    public $celular = \"\";\r\n    public $email = \"\";\r\n    public $comentarios = \"\";\r\n\r\n    function ArrayMessage($status, $message)\r\n    {\r\n        return array(\"status\" => $status, \"message\" => $message, \"date\" => date(\"Y-m-d H:i:s\"));\r\n    }\r\n\r\n    function BuscarContactos($id_entidad)\r\n    {\r\n        $mysql = new Connection();\r\n        $cnn = $mysql->getConnection();\r\n        $retorno = array();\r\n        $query = $cnn->prepare(\"CALL proc_ContactosEntidad(?)\");\r\n        $query->bind_param(\"i\", $id_entidad);\r\n        $query->execute();\r\n        $query->bind_result($id_contacto, $contacto, $telefono, $celular, $email, $comentarios);\r\n        while ($query->fetch()) {\r\n            $contacto = array(\"idcontacto\" => $id_contacto, \"contacto\" => $contacto, \"telefono\" => $telefono, \"celular\" => $celular, \"email\" => $email, \"comentarios\" => $comentarios);\r\n            array_push($retorno, $contacto);\r\n        }\r\n        $query->close();\r\n        $cnn->close();\r\n        return $retorno;\r\n    }\r\n\r\n    function AgregarContacto($id_entidad)\r\n    {\r\n        $mysql = new Connection();\r\n        $cnn = $mysql->getConnection();\r\n        $retorno = array();\r\n        $query = $cnn->prepare(\"CALL proc_AgregarContactoEntidad(?,?,?,?,?,?)\");\r\n        $query->bind_param(\r\n            \"isssss\",\r\n            $id_entidad,\r\n            $this->contacto,\r\n            $this->telefono,\r\n            $this->celular,\r\n            $this->email,\r\n            $this->comentarios\r\n        );\r\n\r\n        $query->execute();\r\n        $query->store_result();\r\n        if (mysqli_stmt_error($query) != \"\") {\r\n            $retorno = $this->ArrayMessage(\"0\", mysqli_stmt_error($query));\r\n        } else {\r\n            $retorno = $this->ArrayMessage(\"1\", \"El contacto ha sido agregado correctamente.\");\r\n        }\r\n        $query->close();\r\n        $cnn->close();\r\n        return $retorno;\r\n    }\r\n\r\n    function EliminarContacto($identidadcontactos)\r\n    {\r\n        $mysql = new Connection();\r\n        $cnn = $mysql->getConnection();\r\n        $retorno = array();\r\n        $query = $cnn->prepare(\"CALL proc_EliminarContactoEntidad(?)\");\r\n        $query->bind_param(\"i\", $identidadcontactos);\r\n        $query->execute();\r\n        $query->store_result();\r\n        if (mysqli_stmt_error($query) != \"\") {\r\n            $retorno = $this->ArrayMessage(\"0\", mysqli_stmt_error($query));\r\n        } else {\r\n            $retorno = $this->ArrayMessage(\"1\", \"El contacto ha sido marcado como inactivo.\");\r\n        }\r\n        $query->close();\r\n        $cnn->close();\r\n        return $retorno;\r\n    }\r\n\r\n\r\n    function EditarContacto($idcontacto, $contacto, $telefono, $celular, $email, $comentarios)\r\n    {\r\n        $mysql = new Connection();\r\n        $cnn = $mysql->getConnection();\r\n        $retorno = array();\r\n        $query = $cnn->prepare(\"CALL proc_EditarContactoEntidad(?, ?, ?, ?, ?, ?)\");\r\n        $query->bind_param(\r\n            \"isssss\",\r\n            $idcontacto,\r\n            $contacto,\r\n            $telefono,\r\n            $celular,\r\n            $email,\r\n            $comentarios\r\n        );\r\n        $query->execute();\r\n        $query->store_result();\r\n        if (mysqli_stmt_error($query) != \"\") {\r\n            $retorno = $this->ArrayMessage(\"0\", mysqli_stmt_error($query));\r\n        } else {\r\n            $retorno = $this->ArrayMessage(\"1\", \"El contacto ha sido editado correctamente.\");\r\n        }\r\n        $query->close();\r\n        $cnn->close();\r\n        return $retorno;\r\n    }\r\n}\r\n\r\nclass Bancos\r\n{\r\n    public $idbanco = \"\";\r\n    public $banco = \"\";\r\n}\r\n\r\nif (isset($_GET[\"functionToCall\"]) && !empty($_GET[\"functionToCall\"])) {\r\n    $functionToCall = $_GET[\"functionToCall\"];\r\n    $json_data = json_decode(file_get_contents('php://input'));\r\n    switch ($functionToCall) {\r\n        case \"buscar_entidad\":\r\n            $entidad = new Entidades();\r\n            echo json_encode($entidad->Buscar(utf8_decode($json_data->textoBuscar)));\r\n            break;\r\n\r\n        case \"info_entidad\":\r\n            $entidad = new Entidades();\r\n            echo json_encode($entidad->BuscarInfo($json_data->id_entidad));\r\n            break;\r\n\r\n        case \"grabar_entidad\":\r\n            $entidad = new Entidades();\r\n            $entidad->identidad  = $json_data->identidad;\r\n            $entidad->nombrecomercial  = $json_data->nombrecomercial;\r\n            $entidad->nombrecomun  = $json_data->nombrecomun;\r\n            $entidad->direccion  = $json_data->direccion;\r\n            $entidad->idciudad  = $json_data->idciudad;\r\n            $entidad->idestado  = $json_data->idestado;\r\n            $entidad->idpais  = $json_data->idpais;\r\n            $entidad->rfc  = $json_data->rfc;\r\n            $entidad->telefono  = $json_data->telefono;\r\n            $entidad->correo  = $json_data->correo;\r\n            $entidad->web  = $json_data->web;\r\n            $entidad->credito  = $json_data->credito;\r\n            $entidad->saldo  = $json_data->saldo;\r\n            $entidad->diascredito  = $json_data->diascredito;\r\n            $entidad->idbanco  = $json_data->idbanco;\r\n            $entidad->cuenta  = $json_data->cuenta;\r\n            $entidad->clabe  = $json_data->clabe;\r\n            $entidad->tipo = $json_data->tipo;\r\n\r\n            echo json_encode($entidad->Grabar());\r\n            break;\r\n\r\n        case \"eliminar_entidad\":\r\n            $entidad = new Entidades();\r\n            echo json_encode($ntidad->Eliminar($json_data->identidad));\r\n            break;\r\n\r\n        case \"contactos_entidad\":\r\n            $contacto = new Contactos();\r\n            echo json_encode($contacto->BuscarContactos($json_data->id_entidad));\r\n            break;\r\n\r\n        case \"agregar_contacto\":\r\n            $contacto = new Contactos();\r\n            $contacto->contacto  = $json_data->contacto;\r\n            $contacto->telefono  = $json_data->telefono;\r\n            $contacto->celular  = $json_data->celular;\r\n            $contacto->email = $json_data->email;\r\n            $contacto->comentarios  = $json_data->comentarios;\r\n\r\n            echo json_encode($contacto->AgregarContacto($json_data->id_entidad));\r\n            break;\r\n\r\n        case \"editar_contacto\":\r\n            $contacto = new Contactos();\r\n\r\n\r\n            echo json_encode($contacto->EditarContacto(\r\n                $json_data->identidadcontactos,\r\n                $json_data->contacto,\r\n                $json_data->telefono,\r\n                $json_data->celular,\r\n                $json_data->email,\r\n                $json_data->comentarios\r\n            ));\r\n            break;\r\n\r\n        case \"eliminar_contacto\":\r\n            $contacto = new Contactos();\r\n            echo json_encode($contacto->EliminarContacto(\r\n                $json_data->idcontacto\r\n            ));\r\n            break;\r\n\r\n        case \"obtener_estados\":\r\n            $entidad = new Entidades();\r\n            echo json_encode($entidad->ObtenerEstados($json_data->idpais));\r\n            break;\r\n\r\n        case \"obtener_ciudades\":\r\n            $entidad = new Entidades();\r\n            echo json_encode($entidad->ObtenerCiudades($json_data->idestado));\r\n            break;\r\n\r\n        case \"obtener_paises\":\r\n            $entidad = new Entidades();\r\n            echo json_encode($entidad->ObtenerPaises());\r\n            break;\r\n\r\n        case \"obtener_bancos\":\r\n            $entidad = new Entidades();\r\n            echo json_encode($entidad->ObtenerBancos());\r\n            break;\r\n    }\r\n}\r\n",
    "modal": {
      "editar-entidad.php": "<div id=\"modalEntidad\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">Editar</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label for=\"tipoEntidad\">Tipo:</label>\r\n                        <select id=\"tipoEntidad\" ng-model=\"detalles_entidad.tipo\" class=\"form-control\">\r\n                            <option value=\"\">Proveedor</option>\r\n                            <option value=\"Cliente\">Cliente</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label>RFC:</label>\r\n                        <input type=\"text\" id=\"txtRFC\" ng-model=\"detalles_entidad.rfc\" class=\"form-control\" />\r\n                    </div>\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label>Nombre Comercial:</label>\r\n                        <input type=\"text\" id=\"txtNombreFiscal\" ng-model=\"detalles_entidad.nombrecomercial\" class=\"form-control\" />\r\n                    </div>\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label>Nombre referencia:</label>\r\n                        <input type=\"text\" id=\"txtNombreComun\" ng-model=\"detalles_entidad.nombrecomun\" class=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-12\">\r\n                        <label>Dirección:</label>\r\n                        <input type=\"text\" id=\"txtDireccion\" ng-model=\"detalles_entidad.direccion\" class=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-row align-items-end\">\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label>País:</label>\r\n                        <select id=\"txtPais\" ng-model=\"detalles_entidad.idpais\" ng-change=\"cambiarPais()\" class=\"form-control\" ng-options=\"pais.idpais as pais.nombre for pais in listaPaises\"></select>\r\n                    </div>\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label>Estado:</label>\r\n                        <select id=\"txtEstado\" ng-model=\"detalles_entidad.idestado\" ng-change=\"cambiarEstado()\" class=\"form-control\" ng-options=\"estado.idestado as estado.nombre for estado in listaEstados\"></select>\r\n                    </div>\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label>Ciudad:</label>\r\n                        <select id=\"txtCiudad\" ng-model=\"detalles_entidad.idciudad\" class=\"form-control\" ng-options=\"ciudad.idciudad as ciudad.nombre for ciudad in listaCiudades\"></select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label>Teléfono:</label>\r\n                        <input type=\"text\" id=\"txtTelefono\" ng-model=\"detalles_entidad.telefono\" class=\"form-control\" />\r\n                    </div>\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label>Correo:</label>\r\n                        <input type=\"text\" id=\"txtCorreo\" ng-model=\"detalles_entidad.correo\" class=\"form-control\" />\r\n                    </div>\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label>Página Web:</label>\r\n                        <input type=\"text\" id=\"txtWeb\" ng-model=\"detalles_entidad.web\" class=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label>Monto crédito:</label>\r\n                        <input type=\"text\" id=\"txtCredito\" ng-model=\"detalles_entidad.credito\" class=\"form-control\" />\r\n                    </div>\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label>Días crédito:</label>\r\n                        <input type=\"text\" id=\"txtDiasCredito\" ng-model=\"detalles_entidad.diascredito\" class=\"form-control\" />\r\n                    </div>\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label>Saldo:</label>\r\n                        <input type=\"text\" id=\"txtSaldo\" ng-model=\"detalles_entidad.saldo\" class=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label>Banco:</label>\r\n                        <select id=\"txtBanco\" ng-model=\"detalles_entidad.idbanco\" class=\"form-control\" ng-options=\"banco.idbanco as banco.banco for banco in listaBancos\"></select>\r\n                    </div>\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label>Cuenta:</label>\r\n                        <input type=\"text\" id=\"txtCuenta\" ng-model=\"detalles_entidad.cuenta\" class=\"form-control\" />\r\n                    </div>\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label>CLABE:</label>\r\n                        <input type=\"text\" id=\"txtClabe\" ng-model=\"detalles_entidad.clabe\" class=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" ng-click=\"Actualizar_Entidad(detalles_entidad)\" class=\"btn btn-primary-custom\"><i class=\"fa fa-save\"></i> Guardar</button>\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\"><i class=\"fa fa-times\"></i> Cancelar</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
    },
    "scripts": {
      "catalogos-script.js": "var myApp = angular.module(\"appCatalogos\", []);\r\n\r\nmyApp.controller(\"cCatalogos\", function ($scope, $http) {\r\n  $scope.listaPaises = [];\r\n  $scope.listaEstados = [];\r\n  $scope.listaCiudades = [];\r\n  $scope.listaEntidades = [];\r\n  $scope.listaBancos = [];\r\n\r\n  $scope.detalles_entidad = {}; // Hacer que detalles_entidad sea global\r\n\r\n  $scope.agregarContactoActivo = false;\r\n  $scope.editando = false;\r\n\r\n  // Inicializar entidad\r\n  $scope.entidad = {\r\n    identidad: 0,\r\n    nombrecomercial: \"\",\r\n    nombrecomun: \"\",\r\n    direccion: \"\",\r\n    idciudad: null,\r\n    idestado: null,\r\n    idpais: null,\r\n    rfc: \"\",\r\n    telefono: \"\",\r\n    correo: \"\",\r\n    web: \"\",\r\n    credito: 0,\r\n    saldo: 0,\r\n    diascredito: 0,\r\n    idbanco: null,\r\n    cuenta: \"\",\r\n    clabe: \"\",\r\n    tipo: \"\",\r\n  };\r\n\r\n  // Obtener lista de bancos al cargar la página\r\n  $http({\r\n    method: \"POST\",\r\n    url: \"cod-entidades.php?functionToCall=obtener_bancos\",\r\n  }).then(function (response) {\r\n    $scope.listaBancos = response.data;\r\n  });\r\n\r\n  // Obtener lista de países al cargar la página\r\n  $http({\r\n    method: \"GET\",\r\n    url: \"cod-entidades.php?functionToCall=obtener_paises\",\r\n  }).then(function (response) {\r\n    $scope.listaPaises = response.data; // Asignar respuesta a listaPaises\r\n  });\r\n\r\n  // Función para manejar el cambio de país\r\n  $scope.cambiarPais = function () {\r\n    $scope.listaEstados = []; // Limpiar lista de estados\r\n    $scope.listaCiudades = []; // Limpiar lista de ciudades\r\n    if ($scope.detalles_entidad.idpais) {\r\n      // Obtener estados del país seleccionado\r\n      $http({\r\n        method: \"POST\",\r\n        url: \"cod-entidades.php?functionToCall=obtener_estados\",\r\n        data: { idpais: $scope.detalles_entidad.idpais },\r\n      }).then(function (response) {\r\n        $scope.listaEstados = response.data; // Asignar respuesta a listaEstados\r\n        // Si ya se tiene un estado seleccionado, mantenerlo\r\n        if ($scope.detalles_entidad.idestado) {\r\n          $scope.cambiarEstado();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // Función para manejar el cambio de estado\r\n  $scope.cambiarEstado = function () {\r\n    $scope.listaCiudades = []; // Limpiar lista de ciudades\r\n    if ($scope.detalles_entidad.idestado) {\r\n      // Obtener ciudades del estado seleccionado\r\n      $http({\r\n        method: \"POST\",\r\n        url: \"cod-entidades.php?functionToCall=obtener_ciudades\",\r\n        data: { idestado: $scope.detalles_entidad.idestado },\r\n      }).then(function (response) {\r\n        $scope.listaCiudades = response.data; // Asignar respuesta a listaCiudades\r\n      });\r\n    }\r\n  };\r\n\r\n  var myData = { textoBuscar: \"\" };\r\n\r\n  // Obtener lista de entidades al cargar la página\r\n  $http({\r\n    method: \"POST\",\r\n    url: \"cod-entidades.php?functionToCall=buscar_entidad\",\r\n    data: myData,\r\n  }).then(function (response) {\r\n    $scope.listaEntidades = response.data;\r\n  });\r\n\r\n  // Función para buscar entidad por texto\r\n  $scope.BuscarEntidad = function () {\r\n    var myData = { textoBuscar: String($(\"#txtTextoBuscar\").val()) };\r\n    $http({\r\n      method: \"POST\",\r\n      url: \"cod-entidades.php?functionToCall=buscar_entidad\",\r\n      data: myData,\r\n    }).then(function (response) {\r\n      $scope.listaEntidades = response.data;\r\n    });\r\n  };\r\n\r\n  // Función para obtener información completa del entidad\r\n  $scope.InfoEntidad = function (identidad) {\r\n    console.log(\"Entidad id: \", identidad);\r\n    return $http({\r\n      method: \"POST\",\r\n      url: \"cod-entidades.php?functionToCall=info_entidad\",\r\n      data: { id_entidad: identidad },\r\n    }).then(\r\n      function (response) {\r\n        console.log(\"Respuesta:\", response.data);\r\n        $scope.detalles_entidad = response.data;\r\n\r\n        // Actualizar los estados y ciudades según el país y estado seleccionados\r\n        $scope.cambiarPais();\r\n\r\n        // Mostrar el modal con la información del entidad\r\n        $(\"#modalEntidad\").modal();\r\n      },\r\n      function (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    );\r\n  };\r\n\r\n  // Función para abrir el modal de edición de entidad\r\n  $scope.AbrirEditar = function (item) {\r\n    $scope\r\n      .InfoEntidad(item.identidad)\r\n      .then(function (response) {\r\n        // Cargar listas para los combobox\r\n        $scope.obtenerPaises();\r\n        $scope.obtenerEstados(item.idpais);\r\n        $scope.obtenerCiudades(item.idestado);\r\n        $scope.obtenerBancos();\r\n\r\n        // Abrir el modal\r\n        $(\"#modalEntidad\").modal();\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error al obtener la información de la entidad:\", error);\r\n      });\r\n  };\r\n  // Función para abrir el modal de nuevo entidad\r\n  $scope.AbrirNuevo = function () {\r\n    $scope.entidad = {\r\n      identidad: 0,\r\n      nombrecomercial: \"\",\r\n      nombrecomun: \"\",\r\n      direccion: \"\",\r\n      idciudad: null,\r\n      idestado: null,\r\n      idpais: null,\r\n      rfc: \"\",\r\n      telefono: \"\",\r\n      correo: \"\",\r\n      web: \"\",\r\n      credito: 0,\r\n      saldo: 0,\r\n      diascredito: 0,\r\n      idbanco: null,\r\n      cuenta: \"\",\r\n      clabe: \"\",\r\n      tipo: \"\",\r\n    };\r\n    $(\"#modalEntidadNuevo\").modal();\r\n  };\r\n\r\n  // Función para guardar entidad\r\n  $scope.Grabar = function () {\r\n    $scope.entidad.tipo = $scope.entidad.tipo || \"Proveedor\";\r\n\r\n    $http({\r\n      method: \"POST\",\r\n      url: \"cod-entidades.php?functionToCall=grabar_entidad\",\r\n      data: $scope.entidad,\r\n    }).then(\r\n      function (response) {\r\n        if (response.data.status === \"1\") {\r\n          alert(response.data.message);\r\n          $scope.BuscarEntidad();\r\n          $(\"#modalEntidadNuevo\").modal(\"hide\");\r\n        } else {\r\n          alert(response.data.message);\r\n        }\r\n      },\r\n      function (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    );\r\n  };\r\n\r\n  $scope.MostrarContactos = function (item) {\r\n    $scope.id_entidad = item.identidad;\r\n\r\n    $http({\r\n      method: \"POST\",\r\n      url: \"cod-entidades.php?functionToCall=contactos_entidad\",\r\n      data: { id_entidad: $scope.id_entidad },\r\n    }).then(\r\n      function (response) {\r\n        $scope.contactos_entidad = Array.isArray(response.data)\r\n          ? response.data\r\n          : [];\r\n        $scope.nuevoContacto = {}; // Inicializar el objeto para el nuevo contacto\r\n        $scope.agregarContactoActivo = false; // Inicializar el estado del renglón editable\r\n        $scope.editando = false; // Inicializar el estado de edición\r\n\r\n        // Mostrar el modal con la información del entidad\r\n        $(\"#modalContactosEntidad\").modal();\r\n      },\r\n      function (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    );\r\n  };\r\n\r\n  $scope.AgregarContacto = function () {\r\n    // Añadir el id del entidad al nuevo contacto\r\n    $scope.nuevoContacto.id_entidad = $scope.id_entidad;\r\n\r\n    $http({\r\n      method: \"POST\",\r\n      url: \"cod-entidades.php?functionToCall=agregar_contacto\",\r\n      data: $scope.nuevoContacto,\r\n    }).then(\r\n      function (response) {\r\n        if (response.data.status == \"1\") {\r\n          $scope.nuevoContacto = {};\r\n          $scope.agregarContactoActivo = false; // Ocultar el renglón editable después de agregar el contacto\r\n          // Recargar los contactos del entidad\r\n          $scope.MostrarContactos({ identidad: $scope.id_entidad });\r\n        } else {\r\n          console.error(\"Error al agregar contacto:\", response.data.message);\r\n        }\r\n      },\r\n      function (error) {\r\n        console.error(\"Error al agregar contacto:\", error);\r\n      }\r\n    );\r\n  };\r\n\r\n  $scope.toggleAgregarContacto = function () {\r\n    $scope.agregarContactoActivo = !$scope.agregarContactoActivo;\r\n    $scope.editando = false; // Desactivar la edición si se está agregando un nuevo contacto\r\n  };\r\n\r\n  $scope.EditarContacto = function (contacto) {\r\n    $scope.contactoOriginal = angular.copy(contacto);\r\n    $scope.nuevoContacto = angular.copy(contacto);\r\n    $scope.editando = true; // Activar el modo de edición\r\n    $scope.agregarContactoActivo = false; // Desactivar agregar contacto si se está editando uno\r\n  };\r\n\r\n  $scope.cancelarEdicion = function () {\r\n    $scope.editando = false;\r\n    $scope.agregarContactoActivo = false;\r\n    $scope.nuevoContacto = {};\r\n  };\r\n\r\n  $scope.GuardarEdicionContacto = function () {\r\n    $http({\r\n      method: \"POST\",\r\n      url: \"cod-entidades.php?functionToCall=editar_contacto\",\r\n      data: {\r\n        identidadcontactos: $scope.contactoOriginal.idcontacto,\r\n        contacto: $scope.nuevoContacto.contacto,\r\n        telefono: $scope.nuevoContacto.telefono,\r\n        celular: $scope.nuevoContacto.celular,\r\n        email: $scope.nuevoContacto.email,\r\n        comentarios: $scope.nuevoContacto.comentarios,\r\n      },\r\n    }).then(\r\n      function (response) {\r\n        if (response.data.status == \"1\") {\r\n          // Actualizar el contacto en la lista local\r\n          $scope.MostrarContactos({ identidad: $scope.id_entidad });\r\n          $scope.nuevoContacto = {};\r\n          $scope.editando = false; // Ocultar el renglón editable después de editar el contacto\r\n          $scope.agregarContactoActivo = false;\r\n        } else {\r\n          console.error(\"Error al editar contacto:\", response.data.message);\r\n        }\r\n      },\r\n      function (error) {\r\n        console.error(\"Error al editar contacto:\", error);\r\n      }\r\n    );\r\n  };\r\n\r\n  $scope.EliminarContacto = function (contacto) {\r\n    $scope.id_contacto = contacto.idcontacto;\r\n\r\n    if (confirm(\"¿Está seguro de que desea eliminar este contacto?\")) {\r\n      $http({\r\n        method: \"POST\",\r\n        url: \"cod-entidades.php?functionToCall=eliminar_contacto\",\r\n        data: { idcontacto: $scope.id_contacto },\r\n      }).then(\r\n        function (response) {\r\n          if (response.data.status == \"1\") {\r\n            // Recargar los contactos del entidad\r\n            $scope.MostrarContactos({ identidad: $scope.id_entidad });\r\n          } else {\r\n            console.error(\"Error al eliminar contacto:\", response.data.message);\r\n          }\r\n        },\r\n        function (error) {\r\n          console.error(\"Error al eliminar contacto:\", error);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  // Ocultar el renglón editable cuando se cierre el modal\r\n  $(\"#modalContactosEntidad\").on(\"hidden.bs.modal\", function () {\r\n    $scope.$apply(function () {\r\n      $scope.agregarContactoActivo = false;\r\n      $scope.editando = false;\r\n    });\r\n  });\r\n\r\n  // Función para abrir el modal de eliminación de entidad\r\n  $scope.AbrirEliminar = function (item) {\r\n    $scope.entidad = item;\r\n    $(\"#modalEntidadEliminar\").modal();\r\n  };\r\n\r\n  // Función para actualizar entidad\r\n  // Función para actualizar entidad\r\n  $scope.Actualizar_Entidad = function (detalles_entidad) {\r\n    $http({\r\n      method: \"POST\",\r\n      url: \"cod-entidades.php?functionToCall=grabar_entidad\",\r\n      data: detalles_entidad, // Asegúrate de que se envíen los datos correctos\r\n    }).then(\r\n      function (response) {\r\n        if (response.data.status === \"1\") {\r\n          alert(response.data.message);\r\n          $scope.BuscarEntidad();\r\n          $(\"#modalEntidad\").modal(\"hide\");\r\n        } else {\r\n          alert(response.data.message);\r\n        }\r\n      },\r\n      function (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    );\r\n  };\r\n\r\n  // Función para eliminar entidad\r\n  $scope.Eliminar = function () {\r\n    $http({\r\n      method: \"POST\",\r\n      url: \"cod-entidades.php?functionToCall=eliminar_entidad\",\r\n      data: $scope.entidad,\r\n    }).then(function (response) {\r\n      if (response.data.status === \"1\") {\r\n        alert(response.data.message);\r\n        $scope.BuscarEntidad();\r\n        $(\"#modalEntidadEliminar\").modal(\"hide\");\r\n      } else {\r\n        alert(response.data.message);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Función para obtener lista de países\r\n  $scope.obtenerPaises = function () {\r\n    $http({\r\n      method: \"GET\",\r\n      url: \"cod-entidades.php?functionToCall=obtener_paises\",\r\n    }).then(function (response) {\r\n      $scope.listaPaises = response.data;\r\n    });\r\n  };\r\n\r\n  // Función para obtener lista de estados\r\n  $scope.obtenerEstados = function (idPais) {\r\n    console.log(\"ID PAIS:\", $scope.detalles_entidad);\r\n    $http({\r\n      method: \"POST\",\r\n      url: \"cod-entidades.php?functionToCall=obtener_estados\",\r\n      data: { idpais: idPais },\r\n    }).then(function (response) {\r\n      $scope.listaEstados = response.data;\r\n    });\r\n  };\r\n\r\n  // Función para obtener lista de ciudades\r\n  $scope.obtenerCiudades = function (idEstado) {\r\n    $http({\r\n      method: \"POST\",\r\n      url: \"cod-entidades.php?functionToCall=obtener_ciudades\",\r\n      data: { idestado: idEstado },\r\n    }).then(function (response) {\r\n      $scope.listaCiudades = response.data;\r\n    });\r\n  };\r\n\r\n  // Función para obtener lista de bancos\r\n  $scope.obtenerBancos = function () {\r\n    $http({\r\n      method: \"POST\",\r\n      url: \"cod-entidades.php?functionToCall=obtener_bancos\",\r\n    }).then(function (response) {\r\n      $scope.listaBancos = response.data;\r\n    });\r\n  };\r\n});\r\n"
    }
  }
}